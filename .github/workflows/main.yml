name: CI
'on':
  - push
jobs:
  code_checks:
    runs-on: ubuntu-20.04
    services:
      db:
        image: mysql:5.7.44
        ports:
          - 3307:3307
        env:
          MYSQL_DATABASE: 'homework_assignment_2024_test'   
          MYSQL_USER: 'rails_user'
          MYSQL_PASSWORD: 'password'      
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_ROOT_HOST: '%'
          MYSQL_TCP_PORT: 3307
          # MYSQL_HOST: localhost
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Show databases for root user
        run: mysql --protocol=tcp -h 127.0.0.1 -P 3307 -u root -ppassword -e "SHOW DATABASES"
      - name: Show databases for rails_user
        run: mysql --protocol=tcp -h 127.0.0.1 -P 3307 -u rails_user -ppassword -e "SHOW DATABASES"
      - uses: actions/setup-node@v1
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'   
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec rake 
      # - name: Gem cache
      #   id: cache-bundle
      #   uses: actions/cache@v1
      #   with:
      #     path: vendor/bundle
      #     key: 'bundle-${{ hashFiles(''**/Gemfile.lock'') }}'
      # - name: Bundle install
      #   env:
      #     RAILS_ENV: test
      #   run: |
      #     gem install bundler
      #     bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: Install yarn
        run: npm install -g yarn
      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - name: Yarn cache
        id: cache-yarn
        uses: actions/cache@v1
        with:
          path: '${{ steps.yarn-cache-dir.outputs.dir }}'
          key: 'yarn-${{ hashFiles(''**/yarn.lock'') }}'
      - name: Yarn install
        run: yarn install
      - name: 'Setup DB, Run tests'
        env:
          RAILS_ENV: test
        run: bundle exec rails db:migrate
      - name: Audit
        env:
          RAILS_ENV: test
        run: bundle exec rake audit
      - name: Rubocop
        env:
          RAILS_ENV: test
        run: bundle exec rubocop
      - name: RSpec
        env:
          RAILS_ENV: test
        run:  bundle exec rspec
